{"version":3,"sources":["components/Header.js","components/LoggedInPage.js","constants.js","components/logInPage.js","components/SignUpPage.js","components/CreateChat.js","components/ViewUserBox.js","components/MessageB.js","components/ChatPage.js","components/NavBar.js","components/ProfilePage.js","components/ChatLi.js","components/ChatList.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","LoggedInPage","name","Card","className","API_ROOT","HEADERS","Accept","handleCreate","newObj","path","errorHandler","successHandler","a","fetch","method","headers","body","JSON","stringify","res","json","data","id","console","log","error","handleUpdate","LogInPage","user","setUser","image_url","useState","errors","setErrors","email","password","newLogin","setNewLogin","e","target","value","alt","src","onSubmit","preventDefault","htmlFor","onChange","type","placeholder","Button","color","variant","to","SignUpPage","initialState","confirmPassword","age_group","history","useHistory","successHandle","push","newSignUp","setNewSignUp","setErorrs","then","autocomplete","CreateChat","userAgeGroup","userId","userName","initialFormState","title","description","location","admin_id","newChat","setNewChat","useEffect","ViewUserBox","viewUser","created_at","text_color","app_color","bio","style","backgroundColor","Date","toDateString","slice","MessageB","chatAG","cable","setViewUser","reactionEl","useRef","openState","setOpenState","fontSize","handleErrors","handleSucess","handleReaction","message_id","user_id","reaction_type","reactMap","reactions","map","r","onClick","handleDeleteReaction","reaction","user_image","alert","status","borderRadius","handleViewUser","content","length","toLocaleString","ref","Popper","anchorEl","current","placement","open","ChatPage","useParams","initialMessage","chat_id","initialUserView","admin","roomInfo","setRoomInfo","newMessage","setNewMessage","cables","setCables","deleted","setDeleted","toggleEdit","setToggleEdit","updateChat","setUpdateChat","messageContainer","scrollIntoView","behavior","block","inline","getData","handleSuccess","handleSuccessChatUpdate","handleChatEdit","setTimeout","cablesMap","room_color","goBack","href","reset","channel","room_title","onReceived","response","message","delete","update","filter","delete_channel","includes","delete_reaction","c","patch_chat","forEach","word","toLowerCase","match","replaceAll","TextField","multiline","rows","NavBar","guestState","userImage","styleObj","ProfilePage","updateProfile","setUpdateProfile","handleProfileUpdate","ChatLi","ChatList","loading","setLoading","setChatRooms","chatRooms","allRoomList","chat","key","noAdultRoomList","Footer","App","initialUserState","exact","component","userAppColor","userTextColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","url","document","getElementById"],"mappings":"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","file":"static/js/main.b86dd64d.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Header() {\n   return (\n      <header>\n         <h1>localHost</h1>\n         <p>a new, colorful chatting experience</p>\n      </header>\n   )\n}\n","import React from \"react\"\nimport { Card } from \"@material-ui/core\"\n\nexport default function LoggedInPage({ name }) {\n   return (\n      <Card className=\"lower\">\n         <h2>Welcome {name}!</h2>\n         <p>You're free to start chatting!</p>\n      </Card>\n   )\n}\n","export const API_ROOT = \"http://localhost:3000\"\nexport const API_WS_ROOT = \"ws://localhost:3000/cable\"\nexport const HEADERS = {\n   \"Content-Type\": \"application/json\",\n   Accept: \"application/json\",\n}\n\nexport async function handleCreate(newObj, path, errorHandler, successHandler) {\n   const res = await fetch(`${API_ROOT}/${path}`, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify(newObj),\n   })\n\n   const data = await res.json()\n   if (data.id) {\n      successHandler(data)\n   } else {\n      console.log(data.error)\n      errorHandler(data.error)\n   }\n}\n\nexport async function handleUpdate(newObj, path, id, errorHandler, successHandler) {\n   const res = await fetch(`${API_ROOT}/${path}/{${id}}`, {\n      method: \"PATCH\",\n      headers: HEADERS,\n      body: JSON.stringify(newObj),\n   })\n\n   const data = await res.json()\n   if (data.id) {\n      successHandler(data)\n   } else {\n      console.log(data.error)\n      errorHandler(data.error)\n   }\n}\n\nexport const colorOptions = (\n   <>\n      {\" \"}\n      <option value=\"#3D3B8E\">Dark Slate</option>\n      <option value=\"#1446A0\">Cobalt</option>\n      <option value=\"#DE8F6E\">Copper</option>\n      <option value=\"#904C77\">Plum</option>\n      <option value=\"#14B82A\">Lime</option>\n      <option value=\"#D4B2D8\">Lavender</option>\n      <option value=\"#92140C\">Ruby</option>\n      <option value=\"#166088\">Sapphire</option>\n      <option value=\"#F7B32B\">Honey</option>\n      <option value=\"#00916E\">Emerald</option>\n      <option value=\"#000\">Black</option>\n      <option value=\"#ccc\">Silver</option>\n      <option value=\"#46351D\">Coffee</option>\n      <option value=\"#F3E9D2\">Champagne</option>\n      <option value=\"white\">White</option>\n   </>\n)\n","import React, { useState } from \"react\"\nimport LoggedInPage from \"./LoggedInPage\"\nimport { Link } from \"react-router-dom\"\nimport { handleCreate } from \"../constants\"\nimport { Card, Button } from \"@material-ui/core\"\n\nexport default function LogInPage({ user, setUser }) {\n   //move user and userState into App to set state of user throughout app and not just at this level\n   const { name, image_url, id } = user\n   const initialLogInState = {\n      email: \"\",\n      password: \"\",\n   }\n   const [errors, setErrors] = useState(null)\n   const [newLogin, setNewLogin] = useState(initialLogInState)\n\n   const handleUpdate = e => setNewLogin({ ...newLogin, [e.target.name]: e.target.value })\n\n   const handleSubmit = e => {\n      e.preventDefault()\n      handleCreate(newLogin, \"log_in\", setErrors, setUser)\n   }\n\n   return (\n      <div>\n         {name !== \"Guest\" ? (\n            <LoggedInPage name={name} />\n         ) : (\n            <>\n               <Card className=\"signUpLogIn\">\n                  <img alt=\"logo\" src=\"https://i.imgur.com/k47edoR.png\" />\n                  <h2>Log In to start chatting</h2>\n                  {errors ? <p>{errors}</p> : null}\n                  <form onSubmit={handleSubmit}>\n                     <label htmlFor=\"email\">Email: </label>\n                     <input\n                        value={newLogin.email}\n                        onChange={handleUpdate}\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                     />\n                     <br />\n                     <div className=\"shift-left-pw\">\n                        <label htmlFor=\"password\">Password: </label>\n                        <input\n                           value={newLogin.password}\n                           onChange={handleUpdate}\n                           type=\"password\"\n                           name=\"password\"\n                           placeholder=\"Password\"\n                        />\n                     </div>\n                     <br />\n                     <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                        Submit\n                     </Button>\n                  </form>\n                  <p>\n                     Don't have a log-in? <Link to=\"/signup\">Sign-Up here!</Link>\n                  </p>\n               </Card>\n            </>\n         )}\n      </div>\n   )\n}\n","import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { handleCreate } from \"../constants\"\nimport { Card, Button } from \"@material-ui/core\"\n\nexport default function SignUpPage() {\n   const initialState = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      age_group: \"--select one--\",\n   }\n\n   const history = useHistory()\n\n   const successHandle = e => history.push(\"/\")\n\n   const [newSignUp, setNewSignUp] = useState(initialState)\n   const [errors, setErorrs] = useState(null)\n\n   const handleUpdate = e => setNewSignUp({ ...newSignUp, [e.target.name]: e.target.value })\n\n   const handleSubmit = e => {\n      e.preventDefault()\n      setErorrs(null)\n      if (newSignUp.password === newSignUp.confirmPassword) {\n         handleCreate(newSignUp, \"users\", setErorrs, successHandle).then(() => {\n            if (errors === null) {\n               setNewSignUp(initialState)\n            }\n         })\n      } else {\n         setErorrs(\"These passwords do not match\")\n      }\n   }\n\n   return (\n      <div>\n         <Card className=\"signUpLogIn\">\n            <img alt=\"logo\" src=\"https://i.imgur.com/k47edoR.png\" />\n            <h2>Sign Up!</h2>\n            {errors ? <p>{errors}</p> : null}\n            <form onSubmit={handleSubmit}>\n               <label htmlFor=\"name\">Name: </label>\n               <input\n                  onChange={handleUpdate}\n                  autocomplete=\"name\"\n                  type=\"text\"\n                  value={newSignUp.name}\n                  name=\"name\"\n                  placeholder=\"Name\"\n               />\n               <br />\n               <label htmlFor=\"email\">Email: </label>\n               <input\n                  onChange={handleUpdate}\n                  value={newSignUp.email}\n                  autocomplete=\"email\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n               />\n               <br />\n               <div className=\"shift-left-pw\">\n                  <label htmlFor=\"password\">Password: </label>\n                  <input\n                     value={newSignUp.password}\n                     onChange={handleUpdate}\n                     type=\"password\"\n                     name=\"password\"\n                     placeholder=\"Password\"\n                  />\n                  <br />\n                  <div className=\"shift-left-pw-conf\">\n                     <label htmlFor=\"confirmPassword\">Confirm Password: </label>\n                     <input\n                        value={newSignUp.confirmPassword}\n                        onChange={handleUpdate}\n                        autocomplete=\"password\"\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholder=\"Re-enter your password\"\n                     />\n\n                     <br />\n                     <label htmlFor=\"age_group\">Select Age Group: </label>\n                     <select value={newSignUp.age_group} onChange={handleUpdate} name=\"age_group\">\n                        Age Group\n                        <option>--select one--</option>\n                        <option value=\"Family\">Family</option>\n                        <option value=\"Adult\">Adult</option>\n                     </select>\n                  </div>\n               </div>\n               <br />\n               <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                  Submit\n               </Button>\n            </form>\n            <p>*Note: Age group will determine which chatrooms you can access</p>\n         </Card>\n      </div>\n   )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { handleCreate } from \"../constants\"\nimport { useHistory } from \"react-router-dom\"\nimport AddCircleTwoToneIcon from \"@material-ui/icons/AddCircleTwoTone\"\nimport { Button, Card } from \"@material-ui/core\"\n\nexport default function CreateChat({ userAgeGroup, userId, userName }) {\n   const initialFormState = {\n      title: \"\",\n      description: \"\",\n      location: \"\",\n      age_group: \"--select one--\",\n      admin_id: userId,\n   }\n\n   const history = useHistory()\n   const [newChat, setNewChat] = useState(initialFormState)\n   const [errors, setErrors] = useState(null)\n   const handleUpdate = e => setNewChat({ ...newChat, [e.target.name]: e.target.value })\n\n   const successHandle = e => history.push(\"/find\")\n\n   const handleSubmit = e => {\n      e.preventDefault()\n      handleCreate(newChat, \"chats\", setErrors, successHandle)\n   }\n\n   useEffect(() => {\n      if (userName === \"Guest\") return history.push(\"/\")\n   }, [userName, history])\n\n   return (\n      <div>\n         <Card className=\"divider\">\n            <h2>Create Chat Room!</h2>\n            {errors ? <p>{errors}</p> : null}\n            <form onSubmit={handleSubmit}>\n               <label htmlFor=\"title\">Title: </label>\n               <input\n                  value={newChat.title}\n                  onChange={handleUpdate}\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Enter Title\"\n               />\n               <br />\n               <label htmlFor=\"description\">Description: </label>\n               <input\n                  value={newChat.description}\n                  onChange={handleUpdate}\n                  type=\"textarea\"\n                  name=\"description\"\n                  placeholder=\"Enter Description\"\n               />\n               <br />\n               <label htmlFor=\"location\">Location: </label>\n               <input\n                  value={newChat.location}\n                  onChange={handleUpdate}\n                  type=\"text\"\n                  name=\"location\"\n                  placeholder=\"Enter Location\"\n               />\n               <br />\n               <label htmlFor=\"age_group\">Select Age Group: </label>\n               <select value={newChat.age_group} onChange={handleUpdate} name=\"age_group\">\n                  <option>--select one--</option>\n                  {userAgeGroup === \"Adult\" ? <option value=\"Adult\">Adult</option> : null}\n                  <option value=\"Family\">Family</option>\n               </select>\n               <br />\n\n               <Button className=\"floatButton\" type=\"submit\" variant=\"contained\">\n                  <AddCircleTwoToneIcon />{\" \"}\n               </Button>\n            </form>\n         </Card>\n      </div>\n   )\n}\n","import React from \"react\"\n\nexport default function ViewUserBox({\n   viewUser: { name, created_at, email, image_url, text_color, app_color, bio },\n}) {\n   return (\n      <>\n         <div style={{ backgroundColor: app_color, color: text_color }}>\n            <p>User: {name} </p>\n\n            <img alt={name} src={image_url} />\n            <p>Bio: {bio}</p>\n            <p> Member Since: {new Date(created_at).toDateString().slice(4)}</p>\n         </div>\n      </>\n   )\n}\n","import React, { useRef, useState } from \"react\"\nimport { API_ROOT, HEADERS, handleCreate } from \"../constants\"\nimport { Popper, Card, Button } from \"@material-ui/core\"\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\"\nimport EmojiEmotionsTwoToneIcon from \"@material-ui/icons/EmojiEmotionsTwoTone\"\n\nexport default function MessageB({ chatAG, cable, userId, setViewUser }) {\n   const reactionEl = useRef()\n   const [openState, setOpenState] = useState(false)\n   const fontSize = { fontSize: 20 }\n\n   async function handleDeleteMessage() {\n      const res = await fetch(`${API_ROOT}/messages/${cable.id}`, {\n         method: \"DELETE\",\n         headers: HEADERS,\n      })\n\n      const data = await res.json()\n      if (data.error) {\n         console.log(data.error)\n      }\n   }\n\n   async function handleDeleteReaction(id) {\n      const res = await fetch(`${API_ROOT}/reactions/${id}`, {\n         method: \"DELETE\",\n         headers: HEADERS,\n      })\n\n      const data = await res.json()\n      if (data.error) {\n         console.log(data.error)\n      }\n   }\n\n   const handleErrors = e => console.log(e)\n   const handleSucess = e => e\n\n   const handleReaction = e => {\n      const newReact = {\n         message_id: cable.id,\n         user_id: userId,\n         reaction_type: e.target.value,\n      }\n      handleCreate(newReact, \"reactions\", handleErrors, handleSucess)\n   }\n\n   const reactMap = cable.reactions.map(r => (\n      <p\n         className=\"reactions\"\n         onClick={r.user_id === userId ? () => handleDeleteReaction(r.id) : null}\n         key={r.id}>\n         <button style={fontSize} className=\"reactBtn\">\n            {r.reaction === \"Sad\"\n               ? \"😢\"\n               : r.reaction === \"Happy\"\n               ? \"😀\"\n               : r.reaction === \"Love\"\n               ? \"🥰\"\n               : r.reaction === \"Angry\"\n               ? \"😡\"\n               : r.reaction === \"Gross\"\n               ? \"🤢\"\n               : null}{\" \"}\n         </button>\n         from <img alt=\"reaction\" className=\"msgImg\" src={r.user_image} />\n      </p>\n   ))\n\n   async function handleViewUser(id) {\n      let res = await fetch(`${API_ROOT}/users/${id}`)\n      let data = await res.json()\n      if (data.id) {\n         setViewUser(data)\n      } else {\n         alert(`Status ${data.status} : ${data.error}`)\n      }\n   }\n\n   return (\n      <Card variant=\"outlined\" style={{ borderRadius: \"20%\" }} className=\"divider\">\n         <div\n            className=\"padding\"\n            style={{ backgroundColor: cable.user.app_color, color: cable.user.text_color }}\n            key={cable.id}>\n            <p>\n               <img\n                  onClick={userId !== cable.user.id ? () => handleViewUser(cable.user.id) : null}\n                  className=\"msgImg\"\n                  alt={`${cable.user.name}`}\n                  src={cable.user.image_url}\n               />{\" \"}\n               {cable.user.name}\n            </p>{\" \"}\n            <p>{cable.content} </p> {cable.reactions.length > 0 ? reactMap : null}\n            <p className=\"font-small\">@ {new Date(cable.created_at).toLocaleString()} </p>\n            {userId === cable.user.id ? (\n               <Button\n                  // className=\"floatLeftButton\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  onClick={handleDeleteMessage}>\n                  <DeleteTwoToneIcon />{\" \"}\n               </Button>\n            ) : (\n               <>\n                  <Button\n                     // className=\"floatButton\"\n                     type=\"submit\"\n                     variant=\"contained\"\n                     onClick={() => setOpenState(!openState)}\n                     ref={reactionEl}\n                     id={`${cable.id}Reaction`}>\n                     <EmojiEmotionsTwoToneIcon />\n                  </Button>\n                  <Popper\n                     id={`${cable.id}Reaction`}\n                     anchorEl={reactionEl.current}\n                     placement=\"right-start\"\n                     open={openState}>\n                     <span className=\"reactWrapper\">\n                        <button\n                           style={fontSize}\n                           className=\"reactBtn\"\n                           onClick={handleReaction}\n                           value={\"Happy\"}>\n                           😃\n                        </button>\n                        <button\n                           style={fontSize}\n                           className=\"reactBtn\"\n                           onClick={handleReaction}\n                           value={\"Sad\"}>\n                           😢\n                        </button>\n                        <button\n                           style={fontSize}\n                           className=\"reactBtn\"\n                           onClick={handleReaction}\n                           value={\"Love\"}>\n                           🥰\n                        </button>\n                        <button\n                           style={fontSize}\n                           className=\"reactBtn\"\n                           onClick={handleReaction}\n                           value={\"Angry\"}>\n                           😡\n                        </button>\n                        <button\n                           style={fontSize}\n                           className=\"reactBtn\"\n                           onClick={handleReaction}\n                           value={\"Gross\"}>\n                           🤢\n                        </button>\n                     </span>\n                  </Popper>\n               </>\n            )}\n         </div>\n      </Card>\n   )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { API_ROOT, handleCreate, HEADERS, handleUpdate } from \"../constants\"\nimport { ActionCable } from \"react-actioncable-provider\"\nimport { Card, Button, TextField } from \"@material-ui/core\"\nimport ViewUserBox from \"./ViewUserBox\"\nimport MessageB from \"./MessageB\"\nimport CloseTwoToneIcon from \"@material-ui/icons/CloseTwoTone\"\nimport KeyboardBackspaceTwoToneIcon from \"@material-ui/icons/KeyboardBackspaceTwoTone\"\nimport AssistantTwoToneIcon from \"@material-ui/icons/AssistantTwoTone\"\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\"\nimport SaveTwoToneIcon from \"@material-ui/icons/SaveTwoTone\"\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\"\n\nexport default function ChatPage({ userId, userName }) {\n   const { id } = useParams()\n   const history = useHistory()\n   const initialState = {\n      admin: { name: \"\", email: \"\" },\n   }\n   const initialMessage = {\n      content: \"\",\n      user_id: userId,\n      chat_id: id,\n   }\n\n   const initialUserView = {\n      name: \"\",\n      email: \"\",\n      image_url: \"\",\n      text_color: \"\",\n      app_color: \"\",\n      bio: \"\",\n   }\n\n   const [errors, setErrors] = useState(null)\n   const [roomInfo, setRoomInfo] = useState(initialState)\n\n   const [newMessage, setNewMessage] = useState(initialMessage)\n   const [cables, setCables] = useState([])\n   const [deleted, setDeleted] = useState(false)\n\n   const [toggleEdit, setToggleEdit] = useState(false)\n   const [updateChat, setUpdateChat] = useState(null)\n\n   const [viewUser, setViewUser] = useState(initialUserView)\n\n   //autoscroll feature\n   const messageContainer = useRef()\n\n   const scrollToBottom = () => {\n      messageContainer.current.scrollIntoView({\n         behavior: \"smooth\",\n         block: \"end\",\n         inline: \"nearest\",\n      })\n   }\n\n   useEffect(() => {\n      scrollToBottom()\n   }, [cables])\n\n   //set chat data and handle if not logged in\n   useEffect(() => {\n      if (userName === \"Guest\") return history.push(\"/\")\n      async function getData() {\n         const res = await fetch(`${API_ROOT}/chats/${id}`)\n         const data = await res.json()\n         setRoomInfo(data)\n         setUpdateChat(data)\n      }\n      getData()\n   }, [history, userName, id])\n\n   const handleErrors = e => console.log(e)\n   const handleSuccess = e => e\n\n   const handleSuccessChatUpdate = data => {\n      setToggleEdit(!toggleEdit)\n   }\n   const handleChange = e => setNewMessage({ ...newMessage, content: e.target.value })\n   const handleChatEdit = e => setUpdateChat({ ...updateChat, [e.target.name]: e.target.value })\n\n   const handleMessageSubmit = e => {\n      e.preventDefault()\n      setErrors(null)\n      if (roomInfo.age_group === \"Family\") {\n         const bannedWords = [/s+h+i+t+/gi, /f+u+c+k+/gi, /b+i+t+c+h+/gi]\n         bannedWords.forEach(word => {\n            if (newMessage.content.toLowerCase().match(word)) {\n               console.log(\"in here\")\n\n               let update = newMessage.content.replaceAll(word, \"****\")\n               newMessage.content = update\n            }\n         })\n      }\n      handleCreate(newMessage, \"messages\", setErrors, handleSuccess)\n      setNewMessage(initialMessage)\n   }\n\n   //message cable/switch handler\n   const handleReceivedChat = response => {\n      const { message } = response\n      if (message.delete) {\n         let update = cables.filter(cable => cable.id !== message.id)\n         setCables(update)\n         return\n      }\n      if (message.delete_channel) {\n         setDeleted(!deleted)\n         return history.push(\"/find\")\n      }\n\n      if (message.reaction) {\n         let update = cables.map(cable => {\n            if (\n               cable.id === message.message_id &&\n               !cable.reactions.map(r => r.user).includes(message.user)\n            ) {\n               return { ...cable, reactions: [...cable.reactions, message] }\n            } else {\n               return cable\n            }\n         })\n\n         setCables([...update])\n         return\n      }\n\n      if (message.delete_reaction) {\n         let update = cables.map(c => {\n            if (c.id === message.message_id) {\n               return { ...c, reactions: c.reactions.filter(r => r.id !== message.id) }\n            } else {\n               return c\n            }\n         })\n\n         setCables(update)\n         return\n      }\n\n      if (message.patch_chat) {\n         setRoomInfo({\n            ...roomInfo,\n            text_color: message.text_color,\n            room_color: message.room_color,\n            description: message.description,\n            location: message.location,\n         })\n         return\n      }\n\n      // if (message.user_in_room && !usersInRoom.includes(message.user)) {\n      //    setUsersInRoom([...usersInRoom, message.user])\n      //    return\n      // }\n\n      // if (message.user_exit_room) {\n      //    console.log(message.user)\n      //    return\n      // }\n\n      if (!cables.map(cable => cable.id).includes(message.id)) {\n         setCables([...cables, message])\n      }\n   }\n\n   async function handleDeleteChat() {\n      const res = await fetch(`${API_ROOT}/chats/${id}`, {\n         method: \"DELETE\",\n         headers: HEADERS,\n      })\n      setTimeout(() => history.push(\"/find\"), 1000)\n      // const data = await res.json()\n   }\n\n   const submitChatUpdate = e => {\n      e.preventDefault()\n\n      handleUpdate(updateChat, \"chats\", id, handleErrors, handleSuccessChatUpdate)\n   }\n\n   const handleBack = () => history.goBack()\n\n   //let usersMap = usersInRoom.map(user => <p key={user}>{user}</p>)\n   let cablesMap = cables.map(cable => (\n      <div className={userId === cable.user.id ? \"msg-right\" : \"msg-left\"}>\n         <MessageB\n            chatAG={roomInfo.age_group}\n            cable={cable}\n            setViewUser={setViewUser}\n            key={cable.id}\n            userId={userId}\n         />\n      </div>\n   ))\n\n   return (\n      <Card\n         className=\"chatPage\"\n         style={{ backgroundColor: roomInfo.room_color, color: roomInfo.text_color }}>\n         {toggleEdit ? (\n            <Card>\n               <h2>Update Profile</h2>\n               <form onSubmit={submitChatUpdate}>\n                  <div className=\"shift-right\">\n                     <label htmlFor=\"description\">Description: </label>\n                     <input\n                        onChange={handleChatEdit}\n                        name=\"description\"\n                        type=\"text\"\n                        value={updateChat.description}\n                     />\n                     <br />\n                     <label htmlFor=\"location\">Location: </label>\n                     <input\n                        onChange={handleChatEdit}\n                        name=\"location\"\n                        type=\"textarea\"\n                        value={updateChat.location}\n                     />\n                  </div>\n                  <label htmlFor=\"room_color\">Room Color: </label>\n                  <input\n                     type=\"color\"\n                     name=\"room_color\"\n                     value={updateChat.room_color}\n                     onChange={handleChatEdit}></input>\n                  <br />\n                  <label htmlFor=\"text_color\">Text & Box Color: </label>\n                  <input\n                     type=\"color\"\n                     name=\"text_color\"\n                     value={updateChat.text_color}\n                     onChange={handleChatEdit}></input>\n                  <br />\n                  <Button type=\"submit\" variant=\"contained\">\n                     <SaveTwoToneIcon />\n                  </Button>\n               </form>\n            </Card>\n         ) : (\n            <Card className=\"divider\">\n               {userId === roomInfo.admin.id ? (\n                  <>\n                     <Button\n                        type=\"submit\"\n                        className=\"floatButton\"\n                        variant=\"contained\"\n                        onClick={handleDeleteChat}>\n                        {\" \"}\n                        <DeleteTwoToneIcon />{\" \"}\n                     </Button>{\" \"}\n                     <Button\n                        type=\"submit\"\n                        className=\"floatButton\"\n                        variant=\"contained\"\n                        onClick={() => setToggleEdit(!toggleEdit)}>\n                        {\" \"}\n                        <AssistantTwoToneIcon />\n                     </Button>{\" \"}\n                  </>\n               ) : null}\n               <Button\n                  className=\"floatButton\"\n                  onClick={handleBack}\n                  type=\"submit\"\n                  variant=\"contained\">\n                  {\" \"}\n                  <KeyboardBackspaceTwoToneIcon />{\" \"}\n               </Button>\n               <br />\n               <br />\n               <h2>Welcome to {roomInfo.title} </h2>\n               <h5>Description: {roomInfo.description}</h5>\n               <h3>Location: {roomInfo.location} </h3>\n               <h3>\n                  For further questions please reach out to channel admin: {roomInfo.admin.name} at{\" \"}\n                  <a href={`mailto:${roomInfo.admin.email}`}>{roomInfo.admin.email}</a>\n               </h3>\n            </Card>\n         )}\n\n         <h3>\n            {roomInfo.age_group === \"Family\"\n               ? \"This room is intended for all ages\"\n               : \"This room is not intended for young children\"}\n         </h3>\n         {viewUser.name !== \"\" ? (\n            <div className=\"viewerBox\">\n               <Card>\n                  <Button\n                     type=\"submit\"\n                     variant=\"contained\"\n                     className=\"floatButton\"\n                     onClick={() => setViewUser(initialUserView)}>\n                     <CloseTwoToneIcon />\n                  </Button>\n                  <ViewUserBox\n                     reset={initialUserView}\n                     setViewUser={setViewUser}\n                     viewUser={viewUser}\n                  />\n               </Card>\n            </div>\n         ) : null}\n         <div>\n            <h3>Messages</h3>\n            <div ref={messageContainer} className=\"messageContainer\">\n               <Card\n                  style={{\n                     backgroundColor: roomInfo.text_color,\n                  }}\n                  className=\"inner-divider\">\n                  <ActionCable\n                     channel={{\n                        channel: `ChatsChannel`,\n                        room_title: roomInfo.title,\n                        user: userName,\n                     }}\n                     onReceived={handleReceivedChat}>\n                     <br />\n                     {cablesMap}\n                  </ActionCable>\n               </Card>\n               <form className=\"messageText\" onSubmit={handleMessageSubmit}>\n                  <Card>\n                     <TextField\n                        className=\"expander\"\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        value={newMessage.content}\n                        onChange={handleChange}\n                        name=\"messageText\"\n                        type=\"textarea\"\n                        placeholder=\"Send ..\"\n                     />\n                     <Button className=\"expander\" type=\"submit\" variant=\"contained\">\n                        <AnnouncementIcon />{\" \"}\n                     </Button>\n                     {errors ? <p>{errors}</p> : null}\n                  </Card>\n               </form>\n            </div>\n         </div>\n      </Card>\n   )\n}\n","import React from \"react\"\nimport { NavLink, Link, useHistory } from \"react-router-dom\"\nimport HomeTwoToneIcon from \"@material-ui/icons/HomeTwoTone\"\nimport AccountCircleTwoToneIcon from \"@material-ui/icons/AccountCircleTwoTone\"\nimport ForumTwoToneIcon from \"@material-ui/icons/ForumTwoTone\"\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\"\nimport AddCircleTwoToneIcon from \"@material-ui/icons/AddCircleTwoTone\"\nimport { Button, Card } from \"@material-ui/core\"\n\nexport default function NavBar({ userId, setUser, guestState, userImage, styleObj }) {\n   const history = useHistory()\n\n   const handleLogOut = () => {\n      setUser(guestState)\n      history.push(\"/\")\n   }\n   return (\n      <nav>\n         <Card style={styleObj}>\n            {\" \"}\n            <Button type=\"submit\" variant=\"contained\">\n               <NavLink to=\"/\">\n                  {\" \"}\n                  <HomeTwoToneIcon />\n               </NavLink>\n            </Button>{\" \"}\n            |{\" \"}\n            <Button type=\"submit\" variant=\"contained\">\n               <NavLink to={`/profile/${userId}`}>\n                  <AccountCircleTwoToneIcon />{\" \"}\n               </NavLink>\n            </Button>{\" \"}\n            |{\" \"}\n            <Button type=\"submit\" variant=\"contained\">\n               <NavLink to=\"/find\">\n                  {\" \"}\n                  <ForumTwoToneIcon />{\" \"}\n               </NavLink>{\" \"}\n            </Button>{\" \"}\n            |{\" \"}\n            <Button type=\"submit\" variant=\"contained\">\n               <NavLink to=\"/createchat\">\n                  <AddCircleTwoToneIcon />\n               </NavLink>\n            </Button>{\" \"}\n            |{\" \"}\n            <Button type=\"submit\" variant=\"contained\">\n               <Link onClick={handleLogOut}>\n                  <ExitToAppTwoToneIcon />\n               </Link>\n            </Button>\n            <br />\n            <br />\n            <img src={userImage} />\n         </Card>\n      </nav>\n   )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { API_ROOT, HEADERS, handleUpdate } from \"../constants\"\nimport { useHistory } from \"react-router-dom\"\nimport { Card, Button } from \"@material-ui/core\"\nimport SaveTwoToneIcon from \"@material-ui/icons/SaveTwoTone\"\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\"\nimport AssistantTwoToneIcon from \"@material-ui/icons/AssistantTwoTone\"\n\nexport default function ProfilePage({ user, setUser, guestState }) {\n   //const params = useParams().id\n   let { name, id, age_group, email, bio, image_url, app_color, text_color } = user\n   const [deleted, setDeleted] = useState(false)\n   const [toggleEdit, setToggleEdit] = useState(false)\n   const [updateProfile, setUpdateProfile] = useState(user)\n   const history = useHistory()\n\n   async function handleDelete() {\n      const res = await fetch(`${API_ROOT}/users/${id}`, {\n         method: \"DELETE\",\n         headers: HEADERS,\n      })\n      const data = await res.json()\n      if (data.error) {\n         alert(data.error)\n      } else {\n         setDeleted(!deleted)\n         setTimeout(() => {\n            setUser(guestState)\n            history.push(\"/\")\n         }, 1000)\n      }\n   }\n\n   function handleProfileUpdate(e) {\n      console.log(e.target.value)\n      setUpdateProfile({ ...updateProfile, [e.target.name]: e.target.value })\n   }\n\n   const handleErrors = e => console.log(e)\n   const handleSuccess = data => {\n      setUser(data)\n      setToggleEdit(!toggleEdit)\n   }\n\n   const submitProfileUpdate = e => {\n      e.preventDefault()\n      handleUpdate(updateProfile, \"users\", id, handleErrors, handleSuccess)\n   }\n\n   useEffect(() => {\n      if (name === \"Guest\") return history.push(\"/\")\n   }, [name, history])\n\n   return (\n      <div>\n         {deleted ? (\n            <p>We're sorry to see you go!</p>\n         ) : (\n            <>\n               {toggleEdit ? (\n                  <Card variant=\"outlined\" className=\"divider\">\n                     <h2>Update Profile</h2>\n                     <form onSubmit={submitProfileUpdate}>\n                        <label htmlFor=\"name\">Name: </label>\n                        <input\n                           onChange={handleProfileUpdate}\n                           name=\"name\"\n                           type=\"text\"\n                           value={updateProfile.name}\n                        />\n                        <br />\n                        <label htmlFor=\"email\">Email: </label>\n                        <input\n                           onChange={handleProfileUpdate}\n                           name=\"email\"\n                           type=\"text\"\n                           value={updateProfile.email}\n                        />\n                        <br />\n                        <div className=\"shift-right\">\n                           <label htmlFor=\"bio\">Bio: </label>\n                           <input\n                              onChange={handleProfileUpdate}\n                              name=\"bio\"\n                              type=\"textarea\"\n                              value={updateProfile.bio}\n                           />\n                        </div>\n\n                        <label htmlFor=\"image_url\">Avatar: </label>\n                        <input\n                           onChange={handleProfileUpdate}\n                           name=\"image_url\"\n                           type=\"textarea\"\n                           value={updateProfile.image_url}\n                        />\n                        <div className=\"shift-left\">\n                           <label htmlFor=\"app_color\">App Color: </label>\n\n                           <input\n                              type=\"color\"\n                              name=\"app_color\"\n                              value={updateProfile.app_color}\n                              onChange={handleProfileUpdate}></input>\n                           <br />\n                           <label htmlFor=\"text_color\">Text Color: </label>\n                           <input\n                              type=\"color\"\n                              name=\"text_color\"\n                              value={updateProfile.text_color}\n                              onChange={handleProfileUpdate}></input>\n                        </div>\n                        <Button type=\"submit\" variant=\"contained\" className=\"floatButton\">\n                           {\" \"}\n                           <SaveTwoToneIcon />\n                        </Button>\n                     </form>\n                  </Card>\n               ) : (\n                  <div className=\"divider\">\n                     <h2>User Profile for {name}</h2>\n\n                     <ul>\n                        <li>Email:{email}</li> <br /> <li>Bio: {bio}</li> <br />\n                        <li>Age Group: {age_group}</li>\n                     </ul>\n                  </div>\n               )}\n               <Button type=\"submit\" variant=\"contained\" onClick={() => setToggleEdit(!toggleEdit)}>\n                  <AssistantTwoToneIcon />\n               </Button>\n               <Button type=\"submit\" variant=\"contained\" onClick={handleDelete}>\n                  <DeleteTwoToneIcon />\n               </Button>\n            </>\n         )}\n      </div>\n   )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Button, Card, Popper } from \"@material-ui/core\"\nimport TextsmsTwoToneIcon from \"@material-ui/icons/TextsmsTwoTone\"\nimport InfoTwoToneIcon from \"@material-ui/icons/InfoTwoTone\"\nimport FontDownloadTwoToneIcon from \"@material-ui/icons/FontDownloadTwoTone\"\nimport ChildCareTwoToneIcon from \"@material-ui/icons/ChildCareTwoTone\"\nimport SupervisorAccountTwoToneIcon from \"@material-ui/icons/SupervisorAccountTwoTone\"\n\nexport default function ChatLi({ id, title, admin, location, description, age_group, userId }) {\n   const anchorEl = useRef()\n   const [openState, setOpenState] = useState(false)\n\n   return (\n      <div className=\"divider\">\n         <Card>\n            <li>\n               {age_group === \"Adult\" ? (\n                  <Button className=\"floatLeftButton\">\n                     {\" \"}\n                     <FontDownloadTwoToneIcon />{\" \"}\n                  </Button>\n               ) : (\n                  <Button className=\"floatLeftButton\">\n                     {\" \"}\n                     <ChildCareTwoToneIcon />{\" \"}\n                  </Button>\n               )}\n               {admin.id === userId ? (\n                  <Button className=\"floatLeftButton\">\n                     <SupervisorAccountTwoToneIcon />{\" \"}\n                  </Button>\n               ) : null}\n               <Button\n                  onClick={() => setOpenState(!openState)}\n                  ref={anchorEl}\n                  className=\"floatButton\"\n                  type=\"submit\"\n                  variant=\"contained\">\n                  <Link>\n                     {\" \"}\n                     <InfoTwoToneIcon />\n                  </Link>\n               </Button>\n               <Popper anchorEl={anchorEl.current} placement=\"top\" open={openState}>\n                  {\" \"}\n                  <Card className=\"divider\">\n                     <p>Location: {location}</p>\n\n                     <p>Description: {description}</p>\n                     <p>Admin: {admin.name}</p>\n                  </Card>\n               </Popper>\n               <Button className=\"floatButton\" type=\"submit\" variant=\"contained\">\n                  <Link to={`/chat/${title}/${id}`}>\n                     {\" \"}\n                     <TextsmsTwoToneIcon />\n                  </Link>\n               </Button>\n               <span> Title: {title.length > 30 ? `${title.slice(0, 30)}...` : title} </span>\n            </li>\n         </Card>\n      </div>\n   )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { API_ROOT } from \"../constants\"\nimport ChatLi from \"./ChatLi\"\nimport { useHistory } from \"react-router-dom\"\nimport { Card, Button } from \"@material-ui/core\"\nimport RefreshTwoToneIcon from \"@material-ui/icons/RefreshTwoTone\"\n\nexport default function ChatList({ userAgeGroup, userName, userId }) {\n   const [loading, setLoading] = useState(null)\n   const history = useHistory()\n\n   async function getData() {\n      setLoading(\"loading\")\n      const res = await fetch(`${API_ROOT}/chats`)\n      const data = await res.json()\n      setChatRooms(data)\n\n      setLoading(null)\n   }\n\n   useEffect(() => {\n      if (userName === \"Guest\") return history.push(\"/\")\n      getData()\n   }, [userName, history])\n\n   const [chatRooms, setChatRooms] = useState([])\n\n   const allRoomList = chatRooms.map(chat => <ChatLi {...chat} key={chat.id} userId={userId} />)\n   const noAdultRoomList = chatRooms\n      .filter(chat => chat.age_group === \"Family\")\n      .map(chat => <ChatLi userId={userId} {...chat} key={chat.id} />)\n\n   return (\n      <div>\n         <h2>Available Chat Rooms : </h2>\n         <Card>\n            <Button className=\"floatButton\" type=\"submit\" variant=\"contained\" onClick={getData}>\n               <RefreshTwoToneIcon />\n            </Button>\n            {loading ? <p>Loading ...</p> : null}\n            {userAgeGroup === \"Family\" ? <h4>Only displaying family friendly chat-rooms</h4> : null}\n            <ul>{userAgeGroup === \"Family\" ? noAdultRoomList : allRoomList}</ul>\n         </Card>\n      </div>\n   )\n}\n","import React from \"react\"\nimport { Card } from \"@material-ui/core\"\n\nexport default function Footer() {\n   return (\n      <footer className=\"footer\">\n         <br />\n         <Card className=\"divider\">\n            <img alt=\"logo\" className=\"logo\" src=\"https://i.imgur.com/k47edoR.png\" />\n            <ul>\n               <li>created by: Grant Cloyd </li>\n               <li>\n                  {\" \"}\n                  <a href=\"mailto:dgcloyd@gmail.com\"> dgcloyd@gmail.com </a>\n               </li>\n\n               <li>//Flatiron Phase 4 </li>\n               <li></li>\n            </ul>\n         </Card>\n      </footer>\n   )\n}\n","import \"./App.css\"\n\nimport { Switch, Route } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport LogInPage from \"./components/logInPage\"\nimport SignUpPage from \"./components/SignUpPage\"\nimport CreateChat from \"./components/CreateChat\"\nimport ChatPage from \"./components/ChatPage\"\nimport NavBar from \"./components/NavBar\"\nimport ProfilePage from \"./components/ProfilePage\"\nimport ChatList from \"./components/ChatList\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n   const initialUserState = {\n      name: \"Guest\",\n      id: \"\",\n      image_url: \"\",\n      bio: \"\",\n      age_group: \"\",\n      app_color: \"\",\n      text_color: \"\",\n   }\n   const [user, setUser] = useState(initialUserState)\n   const styleObj = { backgroundColor: user.app_color, color: user.text_color }\n\n   if (user.name === \"Guest\")\n      return (\n         <Switch>\n            <Route exact path=\"/\" component={() => <LogInPage user={user} setUser={setUser} />} />\n            <Route path=\"/signup\" component={SignUpPage} />\n         </Switch>\n      )\n\n   return (\n      <Switch>\n         <div style={styleObj} className=\"App\">\n            <Header />\n            <div className=\"content\">\n               <NavBar\n                  userId={user.id}\n                  userImage={user.image_url}\n                  setUser={setUser}\n                  guestState={initialUserState}\n                  styleObj={styleObj}\n               />\n\n               <Route\n                  exact\n                  path=\"/\"\n                  component={() => <LogInPage user={user} setUser={setUser} />}\n               />\n\n               <Route\n                  path=\"/createchat\"\n                  component={() => (\n                     <CreateChat\n                        userAgeGroup={user.age_group}\n                        userName={user.name}\n                        userId={user.id}\n                     />\n                  )}\n               />\n\n               <Route\n                  path=\"/find\"\n                  component={() => (\n                     <ChatList\n                        userId={user.id}\n                        userAgeGroup={user.age_group}\n                        userName={user.name}\n                     />\n                  )}\n               />\n               <Route\n                  path=\"/chat/:title/:id\"\n                  component={() => (\n                     <ChatPage\n                        userName={user.name}\n                        userId={user.id}\n                        userAppColor={user.app_color}\n                        userTextColor={user.text_color}\n                     />\n                  )}\n               />\n\n               <Route\n                  path=\"/profile/:id\"\n                  component={() => (\n                     <ProfilePage user={user} setUser={setUser} guestState={initialUserState} />\n                  )}\n               />\n            </div>\n            <Footer />\n         </div>\n      </Switch>\n   )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { API_WS_ROOT } from \"./constants\"\n\nimport { BrowserRouter } from \"react-router-dom\"\nimport { ActionCableProvider } from \"react-actioncable-provider\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n   <React.StrictMode>\n      <ActionCableProvider url={API_WS_ROOT}>\n         <BrowserRouter>\n            <App />\n         </BrowserRouter>\n      </ActionCableProvider>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}